import{get as o}from"../../snowpack/pkg/svelte/store.js";import{LoadTaskById as n}from"./LoadTasks.js";import{tasks as r}from"../stores/tasks.js";import{notify as t}from"../utils/notify.js";import{fillEmptyFields as f}from"../utils/tasks.js";import{isOffline as l}from"../utils/offline.js";import{writeFile as d}from"../utils/fs.js";async function p(s){if(!s.name)return t("Error: name is required","error"),!1;let i={...f(s),finished:!1,deleted:!1,task_id:new Date().toISOString().replace(/[:\-T\.Z]/g,"")};return r.push(i),await d(o(r)),t("Task added","success"),!0}export async function SendNewTask(s){if(l())return p(s);let e=await(await fetch("/api/task",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)})).json();if("task_id"in e){const a=await n(e.task_id);if(a!==null)return r.push(a),t("Task added","success"),!0}return e.status===!1&&t("Error: "+e.message,"error"),!1}
